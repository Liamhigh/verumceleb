name: Deploy to Firebase (Hosting + Functions)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            verum-omnis-founders-gift-v5/verum-omnis-monorepo/functions/node_modules
          key: ${{ runner.os }}-functions-node-${{ hashFiles('verum-omnis-founders-gift-v5/verum-omnis-monorepo/functions/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-functions-node-

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install Functions dependencies
        working-directory: verum-omnis-founders-gift-v5/verum-omnis-monorepo/functions
        run: npm ci

      - name: Authenticate to Firebase
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > "${HOME}/gcp-key.json"
          export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/gcp-key.json"

      - name: Deploy to Firebase Hosting & Functions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-key.json
        run: |
          firebase deploy --only hosting,functions --project $(cat $HOME/gcp-key.json | jq -r .project_id) --token "$(cat $HOME/gcp-key.json | jq -r .token)"

  smoke-test:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Check /api/health endpoint
        run: |
          for i in {1..5}; do
            sleep 10
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://<YOUR_FIREBASE_HOSTING_URL>/api/health)
            if [ "$HTTP_STATUS" -eq 200 ]; then
              echo "Health check succeeded"
              exit 0
            fi
            echo "Health check returned $HTTP_STATUS, retrying..."
          done
          echo "Health check failed"
          exit 1
